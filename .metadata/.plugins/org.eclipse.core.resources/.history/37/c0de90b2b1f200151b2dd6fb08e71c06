package fr.umlv.exercices.exercice;
import java.util.List;
import java.util.Random;

public class Exercice {
	private List<String> words;
	private final Random rand = new Random();
	private final Object lock = new Object();


	Exercice(List<String> words) {
		this.words = words;  // null already checked in create factory

	}
	
	private String getRandomWord(){
		int nb = rand.nextInt(words.size());
		return Collections.
	}
	
	
	private String toPartialJSon() {
		synchronized(this.lock){
			if (this.words.isEmpty() ){
				return "";

			}
			return this.words.stream().map(word -> {return "{\"question\":\"" + word + "\" }";})
					.reduce("", (x, y) -> x + "," + y).substring(1);
					
		}
	}
		
	/**
	 * 
	 * @return The String that represent the Object
	 */
	public String toJSon() {

		synchronized(this.lock){
			return "{\"questions\":["
					+ toPartialJSon() + "]}";
		}
	}



}